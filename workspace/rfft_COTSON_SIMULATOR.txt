
rfft:     file format elf64-x86-64


Disassembly of section .interp:

0000000000400200 <.interp>:
  400200:	2f                   	(bad)  
  400201:	6c                   	insb   (%dx),%es:(%rdi)
  400202:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
  400209:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  40020e:	78 2d                	js     40023d <_init-0x29b>
  400210:	78 38                	js     40024a <_init-0x28e>
  400212:	36                   	ss
  400213:	2d 36 34 2e 73       	sub    $0x732e3436,%eax
  400218:	6f                   	outsl  %ds:(%rsi),(%dx)
  400219:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

000000000040021c <.note.ABI-tag>:
  40021c:	04 00                	add    $0x0,%al
  40021e:	00 00                	add    %al,(%rax)
  400220:	10 00                	adc    %al,(%rax)
  400222:	00 00                	add    %al,(%rax)
  400224:	01 00                	add    %eax,(%rax)
  400226:	00 00                	add    %al,(%rax)
  400228:	47                   	rex.RXB
  400229:	4e 55                	rex.WRX push %rbp
  40022b:	00 00                	add    %al,(%rax)
  40022d:	00 00                	add    %al,(%rax)
  40022f:	00 02                	add    %al,(%rdx)
  400231:	00 00                	add    %al,(%rax)
  400233:	00 06                	add    %al,(%rsi)
  400235:	00 00                	add    %al,(%rax)
  400237:	00 12                	add    %dl,(%rdx)
  400239:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

000000000040023c <.note.gnu.build-id>:
  40023c:	04 00                	add    $0x0,%al
  40023e:	00 00                	add    %al,(%rax)
  400240:	14 00                	adc    $0x0,%al
  400242:	00 00                	add    %al,(%rax)
  400244:	03 00                	add    (%rax),%eax
  400246:	00 00                	add    %al,(%rax)
  400248:	47                   	rex.RXB
  400249:	4e 55                	rex.WRX push %rbp
  40024b:	00 31                	add    %dh,(%rcx)
  40024d:	94                   	xchg   %eax,%esp
  40024e:	a3 5e 20 7b 79 a6 ca 	mov    %eax,0xd65fcaa6797b205e
  400255:	5f d6 
  400257:	9a                   	(bad)  
  400258:	a8 6e                	test   $0x6e,%al
  40025a:	aa                   	stos   %al,%es:(%rdi)
  40025b:	aa                   	stos   %al,%es:(%rdi)
  40025c:	24 4b                	and    $0x4b,%al
  40025e:	ea                   	(bad)  
  40025f:	f4                   	hlt    

Disassembly of section .gnu.hash:

0000000000400260 <.gnu.hash>:
  400260:	01 00                	add    %eax,(%rax)
  400262:	00 00                	add    %al,(%rax)
  400264:	01 00                	add    %eax,(%rax)
  400266:	00 00                	add    %al,(%rax)
  400268:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

0000000000400280 <.dynsym>:
	...
  400298:	47 00 00             	rex.RXB add %r8b,(%r8)
  40029b:	00 12                	add    %dl,(%rdx)
	...
  4002ad:	00 00                	add    %al,(%rax)
  4002af:	00 4e 00             	add    %cl,0x0(%rsi)
  4002b2:	00 00                	add    %al,(%rax)
  4002b4:	12 00                	adc    (%rax),%al
	...
  4002c6:	00 00                	add    %al,(%rax)
  4002c8:	0c 00                	or     $0x0,%al
  4002ca:	00 00                	add    %al,(%rax)
  4002cc:	20 00                	and    %al,(%rax)
	...
  4002de:	00 00                	add    %al,(%rax)
  4002e0:	1b 00                	sbb    (%rax),%eax
  4002e2:	00 00                	add    %al,(%rax)
  4002e4:	20 00                	and    %al,(%rax)
	...
  4002f6:	00 00                	add    %al,(%rax)
  4002f8:	5c                   	pop    %rsp
  4002f9:	00 00                	add    %al,(%rax)
  4002fb:	00 12                	add    %dl,(%rdx)
	...
  40030d:	00 00                	add    %al,(%rax)
  40030f:	00 63 00             	add    %ah,0x0(%rbx)
  400312:	00 00                	add    %al,(%rax)
  400314:	12 00                	adc    (%rax),%al
	...
  400326:	00 00                	add    %al,(%rax)
  400328:	55                   	push   %rbp
  400329:	00 00                	add    %al,(%rax)
  40032b:	00 12                	add    %dl,(%rdx)
	...
  40033d:	00 00                	add    %al,(%rax)
  40033f:	00 2f                	add    %ch,(%rdi)
  400341:	00 00                	add    %al,(%rax)
  400343:	00 12                	add    %dl,(%rdx)
	...

Disassembly of section .dynstr:

0000000000400358 <.dynstr>:
  400358:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
  40035c:	72 74                	jb     4003d2 <_init-0x106>
  40035e:	2e 73 6f             	jae,pn 4003d0 <_init-0x108>
  400361:	2e 31 00             	xor    %eax,%cs:(%rax)
  400364:	5f                   	pop    %rdi
  400365:	5f                   	pop    %rdi
  400366:	67 6d                	insl   (%dx),%es:(%edi)
  400368:	6f                   	outsl  %ds:(%rsi),(%dx)
  400369:	6e                   	outsb  %ds:(%rsi),(%dx)
  40036a:	5f                   	pop    %rdi
  40036b:	73 74                	jae    4003e1 <_init-0xf7>
  40036d:	61                   	(bad)  
  40036e:	72 74                	jb     4003e4 <_init-0xf4>
  400370:	5f                   	pop    %rdi
  400371:	5f                   	pop    %rdi
  400372:	00 5f 4a             	add    %bl,0x4a(%rdi)
  400375:	76 5f                	jbe    4003d6 <_init-0x102>
  400377:	52                   	push   %rdx
  400378:	65 67 69 73 74 65 72 	imul   $0x6c437265,%gs:0x74(%ebx),%esi
  40037f:	43 6c 
  400381:	61                   	(bad)  
  400382:	73 73                	jae    4003f7 <_init-0xe1>
  400384:	65                   	gs
  400385:	73 00                	jae    400387 <_init-0x151>
  400387:	63 6c 6f 63          	movslq 0x63(%rdi,%rbp,2),%ebp
  40038b:	6b 5f 67 65          	imul   $0x65,0x67(%rdi),%ebx
  40038f:	74 74                	je     400405 <_init-0xd3>
  400391:	69 6d 65 00 6c 69 62 	imul   $0x62696c00,0x65(%rbp),%ebp
  400398:	63 2e                	movslq (%rsi),%ebp
  40039a:	73 6f                	jae    40040b <_init-0xcd>
  40039c:	2e 36 00 70 72       	cs add %dh,%cs:%ss:0x72(%rax)
  4003a1:	69 6e 74 66 00 6d 65 	imul   $0x656d0066,0x74(%rsi),%ebp
  4003a8:	6d                   	insl   (%dx),%es:(%rdi)
  4003a9:	73 65                	jae    400410 <_init-0xc8>
  4003ab:	74 00                	je     4003ad <_init-0x12b>
  4003ad:	6d                   	insl   (%dx),%es:(%rdi)
  4003ae:	65                   	gs
  4003af:	6d                   	insl   (%dx),%es:(%rdi)
  4003b0:	63 70 79             	movslq 0x79(%rax),%esi
  4003b3:	00 6d 61             	add    %ch,0x61(%rbp)
  4003b6:	6c                   	insb   (%dx),%es:(%rdi)
  4003b7:	6c                   	insb   (%dx),%es:(%rdi)
  4003b8:	6f                   	outsl  %ds:(%rsi),(%dx)
  4003b9:	63 00                	movslq (%rax),%eax
  4003bb:	5f                   	pop    %rdi
  4003bc:	5f                   	pop    %rdi
  4003bd:	6c                   	insb   (%dx),%es:(%rdi)
  4003be:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
  4003c5:	72 74                	jb     40043b <_init-0x9d>
  4003c7:	5f                   	pop    %rdi
  4003c8:	6d                   	insl   (%dx),%es:(%rdi)
  4003c9:	61                   	(bad)  
  4003ca:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
  4003d1:	43 5f                	rex.XB pop %r15
  4003d3:	32 2e                	xor    (%rsi),%ch
  4003d5:	32 2e                	xor    (%rsi),%ch
  4003d7:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

00000000004003da <.gnu.version>:
  4003da:	00 00                	add    %al,(%rax)
  4003dc:	02 00                	add    (%rax),%al
  4003de:	02 00                	add    (%rax),%al
  4003e0:	00 00                	add    %al,(%rax)
  4003e2:	00 00                	add    %al,(%rax)
  4003e4:	02 00                	add    (%rax),%al
  4003e6:	02 00                	add    (%rax),%al
  4003e8:	02 00                	add    (%rax),%al
  4003ea:	03 00                	add    (%rax),%eax

Disassembly of section .gnu.version_r:

00000000004003f0 <.gnu.version_r>:
  4003f0:	01 00                	add    %eax,(%rax)
  4003f2:	01 00                	add    %eax,(%rax)
  4003f4:	01 00                	add    %eax,(%rax)
  4003f6:	00 00                	add    %al,(%rax)
  4003f8:	10 00                	adc    %al,(%rax)
  4003fa:	00 00                	add    %al,(%rax)
  4003fc:	20 00                	and    %al,(%rax)
  4003fe:	00 00                	add    %al,(%rax)
  400400:	75 1a                	jne    40041c <_init-0xbc>
  400402:	69 09 00 00 03 00    	imul   $0x30000,(%rcx),%ecx
  400408:	75 00                	jne    40040a <_init-0xce>
  40040a:	00 00                	add    %al,(%rax)
  40040c:	00 00                	add    %al,(%rax)
  40040e:	00 00                	add    %al,(%rax)
  400410:	01 00                	add    %eax,(%rax)
  400412:	01 00                	add    %eax,(%rax)
  400414:	3d 00 00 00 10       	cmp    $0x10000000,%eax
  400419:	00 00                	add    %al,(%rax)
  40041b:	00 00                	add    %al,(%rax)
  40041d:	00 00                	add    %al,(%rax)
  40041f:	00 75 1a             	add    %dh,0x1a(%rbp)
  400422:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
  400428:	75 00                	jne    40042a <_init-0xae>
  40042a:	00 00                	add    %al,(%rax)
  40042c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000400430 <.rela.dyn>:
  400430:	00 12                	add    %dl,(%rdx)
  400432:	60                   	(bad)  
  400433:	00 00                	add    %al,(%rax)
  400435:	00 00                	add    %al,(%rax)
  400437:	00 06                	add    %al,(%rsi)
  400439:	00 00                	add    %al,(%rax)
  40043b:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .rela.plt:

0000000000400448 <.rela.plt>:
  400448:	20 12                	and    %dl,(%rdx)
  40044a:	60                   	(bad)  
  40044b:	00 00                	add    %al,(%rax)
  40044d:	00 00                	add    %al,(%rax)
  40044f:	00 07                	add    %al,(%rdi)
  400451:	00 00                	add    %al,(%rax)
  400453:	00 01                	add    %al,(%rcx)
	...
  40045d:	00 00                	add    %al,(%rax)
  40045f:	00 28                	add    %ch,(%rax)
  400461:	12 60 00             	adc    0x0(%rax),%ah
  400464:	00 00                	add    %al,(%rax)
  400466:	00 00                	add    %al,(%rax)
  400468:	07                   	(bad)  
  400469:	00 00                	add    %al,(%rax)
  40046b:	00 02                	add    %al,(%rdx)
	...
  400475:	00 00                	add    %al,(%rax)
  400477:	00 30                	add    %dh,(%rax)
  400479:	12 60 00             	adc    0x0(%rax),%ah
  40047c:	00 00                	add    %al,(%rax)
  40047e:	00 00                	add    %al,(%rax)
  400480:	07                   	(bad)  
  400481:	00 00                	add    %al,(%rax)
  400483:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 400489 <_init-0x4f>
  400489:	00 00                	add    %al,(%rax)
  40048b:	00 00                	add    %al,(%rax)
  40048d:	00 00                	add    %al,(%rax)
  40048f:	00 38                	add    %bh,(%rax)
  400491:	12 60 00             	adc    0x0(%rax),%ah
  400494:	00 00                	add    %al,(%rax)
  400496:	00 00                	add    %al,(%rax)
  400498:	07                   	(bad)  
  400499:	00 00                	add    %al,(%rax)
  40049b:	00 06                	add    %al,(%rsi)
	...
  4004a5:	00 00                	add    %al,(%rax)
  4004a7:	00 40 12             	add    %al,0x12(%rax)
  4004aa:	60                   	(bad)  
  4004ab:	00 00                	add    %al,(%rax)
  4004ad:	00 00                	add    %al,(%rax)
  4004af:	00 07                	add    %al,(%rdi)
  4004b1:	00 00                	add    %al,(%rax)
  4004b3:	00 07                	add    %al,(%rdi)
	...
  4004bd:	00 00                	add    %al,(%rax)
  4004bf:	00 48 12             	add    %cl,0x12(%rax)
  4004c2:	60                   	(bad)  
  4004c3:	00 00                	add    %al,(%rax)
  4004c5:	00 00                	add    %al,(%rax)
  4004c7:	00 07                	add    %al,(%rdi)
  4004c9:	00 00                	add    %al,(%rax)
  4004cb:	00 08                	add    %cl,(%rax)
	...

Disassembly of section .init:

00000000004004d8 <_init>:
  4004d8:	48 83 ec 08          	sub    $0x8,%rsp
  4004dc:	e8 ab 00 00 00       	callq  40058c <call_gmon_start>
  4004e1:	e8 3a 01 00 00       	callq  400620 <frame_dummy>
  4004e6:	e8 55 09 00 00       	callq  400e40 <__do_global_ctors_aux>
  4004eb:	48 83 c4 08          	add    $0x8,%rsp
  4004ef:	c3                   	retq   

Disassembly of section .plt:

00000000004004f0 <printf@plt-0x10>:
  4004f0:	ff 35 1a 0d 20 00    	pushq  0x200d1a(%rip)        # 601210 <_GLOBAL_OFFSET_TABLE_+0x8>
  4004f6:	ff 25 1c 0d 20 00    	jmpq   *0x200d1c(%rip)        # 601218 <_GLOBAL_OFFSET_TABLE_+0x10>
  4004fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400500 <printf@plt>:
  400500:	ff 25 1a 0d 20 00    	jmpq   *0x200d1a(%rip)        # 601220 <_GLOBAL_OFFSET_TABLE_+0x18>
  400506:	68 00 00 00 00       	pushq  $0x0
  40050b:	e9 e0 ff ff ff       	jmpq   4004f0 <_init+0x18>

0000000000400510 <memset@plt>:
  400510:	ff 25 12 0d 20 00    	jmpq   *0x200d12(%rip)        # 601228 <_GLOBAL_OFFSET_TABLE_+0x20>
  400516:	68 01 00 00 00       	pushq  $0x1
  40051b:	e9 d0 ff ff ff       	jmpq   4004f0 <_init+0x18>

0000000000400520 <malloc@plt>:
  400520:	ff 25 0a 0d 20 00    	jmpq   *0x200d0a(%rip)        # 601230 <_GLOBAL_OFFSET_TABLE_+0x28>
  400526:	68 02 00 00 00       	pushq  $0x2
  40052b:	e9 c0 ff ff ff       	jmpq   4004f0 <_init+0x18>

0000000000400530 <__libc_start_main@plt>:
  400530:	ff 25 02 0d 20 00    	jmpq   *0x200d02(%rip)        # 601238 <_GLOBAL_OFFSET_TABLE_+0x30>
  400536:	68 03 00 00 00       	pushq  $0x3
  40053b:	e9 b0 ff ff ff       	jmpq   4004f0 <_init+0x18>

0000000000400540 <memcpy@plt>:
  400540:	ff 25 fa 0c 20 00    	jmpq   *0x200cfa(%rip)        # 601240 <_GLOBAL_OFFSET_TABLE_+0x38>
  400546:	68 04 00 00 00       	pushq  $0x4
  40054b:	e9 a0 ff ff ff       	jmpq   4004f0 <_init+0x18>

0000000000400550 <clock_gettime@plt>:
  400550:	ff 25 f2 0c 20 00    	jmpq   *0x200cf2(%rip)        # 601248 <_GLOBAL_OFFSET_TABLE_+0x40>
  400556:	68 05 00 00 00       	pushq  $0x5
  40055b:	e9 90 ff ff ff       	jmpq   4004f0 <_init+0x18>

Disassembly of section .text:

0000000000400560 <_start>:
  400560:	31 ed                	xor    %ebp,%ebp
  400562:	49 89 d1             	mov    %rdx,%r9
  400565:	5e                   	pop    %rsi
  400566:	48 89 e2             	mov    %rsp,%rdx
  400569:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40056d:	50                   	push   %rax
  40056e:	54                   	push   %rsp
  40056f:	49 c7 c0 a0 0d 40 00 	mov    $0x400da0,%r8
  400576:	48 c7 c1 b0 0d 40 00 	mov    $0x400db0,%rcx
  40057d:	48 c7 c7 25 0d 40 00 	mov    $0x400d25,%rdi
  400584:	e8 a7 ff ff ff       	callq  400530 <__libc_start_main@plt>
  400589:	f4                   	hlt    
  40058a:	90                   	nop
  40058b:	90                   	nop

000000000040058c <call_gmon_start>:
  40058c:	48 83 ec 08          	sub    $0x8,%rsp
  400590:	48 8b 05 69 0c 20 00 	mov    0x200c69(%rip),%rax        # 601200 <_DYNAMIC+0x1a0>
  400597:	48 85 c0             	test   %rax,%rax
  40059a:	74 02                	je     40059e <call_gmon_start+0x12>
  40059c:	ff d0                	callq  *%rax
  40059e:	48 83 c4 08          	add    $0x8,%rsp
  4005a2:	c3                   	retq   
  4005a3:	90                   	nop
  4005a4:	90                   	nop
  4005a5:	90                   	nop
  4005a6:	90                   	nop
  4005a7:	90                   	nop
  4005a8:	90                   	nop
  4005a9:	90                   	nop
  4005aa:	90                   	nop
  4005ab:	90                   	nop
  4005ac:	90                   	nop
  4005ad:	90                   	nop
  4005ae:	90                   	nop
  4005af:	90                   	nop

00000000004005b0 <__do_global_dtors_aux>:
  4005b0:	55                   	push   %rbp
  4005b1:	48 89 e5             	mov    %rsp,%rbp
  4005b4:	53                   	push   %rbx
  4005b5:	48 83 ec 08          	sub    $0x8,%rsp
  4005b9:	80 3d a0 0c 20 00 00 	cmpb   $0x0,0x200ca0(%rip)        # 601260 <__bss_start>
  4005c0:	75 4b                	jne    40060d <__do_global_dtors_aux+0x5d>
  4005c2:	bb 50 10 60 00       	mov    $0x601050,%ebx
  4005c7:	48 8b 05 9a 0c 20 00 	mov    0x200c9a(%rip),%rax        # 601268 <dtor_idx.6366>
  4005ce:	48 81 eb 48 10 60 00 	sub    $0x601048,%rbx
  4005d5:	48 c1 fb 03          	sar    $0x3,%rbx
  4005d9:	48 83 eb 01          	sub    $0x1,%rbx
  4005dd:	48 39 d8             	cmp    %rbx,%rax
  4005e0:	73 24                	jae    400606 <__do_global_dtors_aux+0x56>
  4005e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4005e8:	48 83 c0 01          	add    $0x1,%rax
  4005ec:	48 89 05 75 0c 20 00 	mov    %rax,0x200c75(%rip)        # 601268 <dtor_idx.6366>
  4005f3:	ff 14 c5 48 10 60 00 	callq  *0x601048(,%rax,8)
  4005fa:	48 8b 05 67 0c 20 00 	mov    0x200c67(%rip),%rax        # 601268 <dtor_idx.6366>
  400601:	48 39 d8             	cmp    %rbx,%rax
  400604:	72 e2                	jb     4005e8 <__do_global_dtors_aux+0x38>
  400606:	c6 05 53 0c 20 00 01 	movb   $0x1,0x200c53(%rip)        # 601260 <__bss_start>
  40060d:	48 83 c4 08          	add    $0x8,%rsp
  400611:	5b                   	pop    %rbx
  400612:	c9                   	leaveq 
  400613:	c3                   	retq   
  400614:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  40061b:	00 00 00 00 00 

0000000000400620 <frame_dummy>:
  400620:	48 83 3d 30 0a 20 00 	cmpq   $0x0,0x200a30(%rip)        # 601058 <__JCR_END__>
  400627:	00 
  400628:	55                   	push   %rbp
  400629:	48 89 e5             	mov    %rsp,%rbp
  40062c:	74 12                	je     400640 <frame_dummy+0x20>
  40062e:	b8 00 00 00 00       	mov    $0x0,%eax
  400633:	48 85 c0             	test   %rax,%rax
  400636:	74 08                	je     400640 <frame_dummy+0x20>
  400638:	bf 58 10 60 00       	mov    $0x601058,%edi
  40063d:	c9                   	leaveq 
  40063e:	ff e0                	jmpq   *%rax
  400640:	c9                   	leaveq 
  400641:	c3                   	retq   
  400642:	90                   	nop
  400643:	90                   	nop

0000000000400644 <bit_reverse>:
  400644:	89 f8                	mov    %edi,%eax
  400646:	89 c2                	mov    %eax,%edx
  400648:	81 e2 aa aa aa aa    	and    $0xaaaaaaaa,%edx
  40064e:	d1 ea                	shr    %edx
  400650:	25 55 55 55 55       	and    $0x55555555,%eax
  400655:	01 c0                	add    %eax,%eax
  400657:	09 d0                	or     %edx,%eax
  400659:	89 c2                	mov    %eax,%edx
  40065b:	81 e2 cc cc cc cc    	and    $0xcccccccc,%edx
  400661:	c1 ea 02             	shr    $0x2,%edx
  400664:	25 33 33 33 33       	and    $0x33333333,%eax
  400669:	c1 e0 02             	shl    $0x2,%eax
  40066c:	09 d0                	or     %edx,%eax
  40066e:	89 c2                	mov    %eax,%edx
  400670:	81 e2 f0 f0 f0 f0    	and    $0xf0f0f0f0,%edx
  400676:	c1 ea 04             	shr    $0x4,%edx
  400679:	25 0f 0f 0f 0f       	and    $0xf0f0f0f,%eax
  40067e:	c1 e0 04             	shl    $0x4,%eax
  400681:	09 d0                	or     %edx,%eax
  400683:	89 c2                	mov    %eax,%edx
  400685:	81 e2 00 ff 00 ff    	and    $0xff00ff00,%edx
  40068b:	c1 ea 08             	shr    $0x8,%edx
  40068e:	25 ff 00 ff 00       	and    $0xff00ff,%eax
  400693:	c1 e0 08             	shl    $0x8,%eax
  400696:	09 d0                	or     %edx,%eax
  400698:	89 c2                	mov    %eax,%edx
  40069a:	c1 fa 10             	sar    $0x10,%edx
  40069d:	c1 e0 10             	shl    $0x10,%eax
  4006a0:	09 d0                	or     %edx,%eax
  4006a2:	c3                   	retq   

00000000004006a3 <fft>:
  4006a3:	55                   	push   %rbp
  4006a4:	48 89 e5             	mov    %rsp,%rbp
  4006a7:	53                   	push   %rbx
  4006a8:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
  4006af:	48 89 bd 38 ff ff ff 	mov    %rdi,-0xc8(%rbp)
  4006b6:	89 b5 34 ff ff ff    	mov    %esi,-0xcc(%rbp)
  4006bc:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
  4006c2:	0f bc c0             	bsf    %eax,%eax
  4006c5:	89 45 dc             	mov    %eax,-0x24(%rbp)
  4006c8:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
  4006cf:	e9 da 00 00 00       	jmpq   4007ae <fft+0x10b>
  4006d4:	8b 45 e0             	mov    -0x20(%rbp),%eax
  4006d7:	89 c7                	mov    %eax,%edi
  4006d9:	e8 66 ff ff ff       	callq  400644 <bit_reverse>
  4006de:	89 c2                	mov    %eax,%edx
  4006e0:	b8 20 00 00 00       	mov    $0x20,%eax
  4006e5:	2b 45 dc             	sub    -0x24(%rbp),%eax
  4006e8:	89 d3                	mov    %edx,%ebx
  4006ea:	89 c1                	mov    %eax,%ecx
  4006ec:	d3 eb                	shr    %cl,%ebx
  4006ee:	89 d8                	mov    %ebx,%eax
  4006f0:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4006f3:	8b 45 e0             	mov    -0x20(%rbp),%eax
  4006f6:	3b 45 ec             	cmp    -0x14(%rbp),%eax
  4006f9:	0f 86 ac 00 00 00    	jbe    4007ab <fft+0x108>
  4006ff:	48 89 e0             	mov    %rsp,%rax
  400702:	48 89 c3             	mov    %rax,%rbx
  400705:	8b 45 dc             	mov    -0x24(%rbp),%eax
  400708:	ba 20 00 00 00       	mov    $0x20,%edx
  40070d:	48 89 d1             	mov    %rdx,%rcx
  400710:	48 29 c1             	sub    %rax,%rcx
  400713:	48 89 c8             	mov    %rcx,%rax
  400716:	48 89 c2             	mov    %rax,%rdx
  400719:	48 ff ca             	dec    %rdx
  40071c:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
  400720:	48 c1 e0 02          	shl    $0x2,%rax
  400724:	48 83 c0 0f          	add    $0xf,%rax
  400728:	48 83 c0 0f          	add    $0xf,%rax
  40072c:	48 c1 e8 04          	shr    $0x4,%rax
  400730:	48 c1 e0 04          	shl    $0x4,%rax
  400734:	48 29 c4             	sub    %rax,%rsp
  400737:	48 89 e0             	mov    %rsp,%rax
  40073a:	48 83 c0 0f          	add    $0xf,%rax
  40073e:	48 c1 e8 04          	shr    $0x4,%rax
  400742:	48 c1 e0 04          	shl    $0x4,%rax
  400746:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  40074a:	8b 55 e0             	mov    -0x20(%rbp),%edx
  40074d:	8b 45 e0             	mov    -0x20(%rbp),%eax
  400750:	48 98                	cltq   
  400752:	48 c1 e0 02          	shl    $0x2,%rax
  400756:	48 03 85 38 ff ff ff 	add    -0xc8(%rbp),%rax
  40075d:	8b 08                	mov    (%rax),%ecx
  40075f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  400763:	48 63 d2             	movslq %edx,%rdx
  400766:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
  400769:	8b 45 e0             	mov    -0x20(%rbp),%eax
  40076c:	48 98                	cltq   
  40076e:	48 c1 e0 02          	shl    $0x2,%rax
  400772:	48 03 85 38 ff ff ff 	add    -0xc8(%rbp),%rax
  400779:	8b 55 ec             	mov    -0x14(%rbp),%edx
  40077c:	48 c1 e2 02          	shl    $0x2,%rdx
  400780:	48 03 95 38 ff ff ff 	add    -0xc8(%rbp),%rdx
  400787:	8b 12                	mov    (%rdx),%edx
  400789:	89 10                	mov    %edx,(%rax)
  40078b:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40078e:	48 c1 e0 02          	shl    $0x2,%rax
  400792:	48 03 85 38 ff ff ff 	add    -0xc8(%rbp),%rax
  400799:	8b 4d e0             	mov    -0x20(%rbp),%ecx
  40079c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4007a0:	48 63 c9             	movslq %ecx,%rcx
  4007a3:	8b 14 8a             	mov    (%rdx,%rcx,4),%edx
  4007a6:	89 10                	mov    %edx,(%rax)
  4007a8:	48 89 dc             	mov    %rbx,%rsp
  4007ab:	ff 45 e0             	incl   -0x20(%rbp)
  4007ae:	8b 45 e0             	mov    -0x20(%rbp),%eax
  4007b1:	3b 85 34 ff ff ff    	cmp    -0xcc(%rbp),%eax
  4007b7:	0f 8c 17 ff ff ff    	jl     4006d4 <fft+0x31>
  4007bd:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
  4007c1:	ba 20 00 00 00       	mov    $0x20,%edx
  4007c6:	be 00 00 00 00       	mov    $0x0,%esi
  4007cb:	48 89 c7             	mov    %rax,%rdi
  4007ce:	e8 3d fd ff ff       	callq  400510 <memset@plt>
  4007d3:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
  4007da:	ba 28 00 00 00       	mov    $0x28,%edx
  4007df:	be 00 00 00 00       	mov    $0x0,%esi
  4007e4:	48 89 c7             	mov    %rax,%rdi
  4007e7:	e8 24 fd ff ff       	callq  400510 <memset@plt>
  4007ec:	48 8b 8d 38 ff ff ff 	mov    -0xc8(%rbp),%rcx
  4007f3:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
  4007fa:	ba 20 00 00 00       	mov    $0x20,%edx
  4007ff:	48 89 ce             	mov    %rcx,%rsi
  400802:	48 89 c7             	mov    %rax,%rdi
  400805:	e8 36 fd ff ff       	callq  400540 <memcpy@plt>
  40080a:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
  400811:	eb 6f                	jmp    400882 <fft+0x1df>
  400813:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  400816:	8d 14 00             	lea    (%rax,%rax,1),%edx
  400819:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40081c:	01 c0                	add    %eax,%eax
  40081e:	48 98                	cltq   
  400820:	f3 0f 10 8c 85 40 ff 	movss  -0xc0(%rbp,%rax,4),%xmm1
  400827:	ff ff 
  400829:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40082c:	01 c0                	add    %eax,%eax
  40082e:	ff c0                	inc    %eax
  400830:	48 98                	cltq   
  400832:	f3 0f 10 84 85 40 ff 	movss  -0xc0(%rbp,%rax,4),%xmm0
  400839:	ff ff 
  40083b:	f3 0f 58 c1          	addss  %xmm1,%xmm0
  40083f:	48 63 c2             	movslq %edx,%rax
  400842:	f3 0f 11 44 85 80    	movss  %xmm0,-0x80(%rbp,%rax,4)
  400848:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40084b:	01 c0                	add    %eax,%eax
  40084d:	8d 50 01             	lea    0x1(%rax),%edx
  400850:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  400853:	01 c0                	add    %eax,%eax
  400855:	48 98                	cltq   
  400857:	f3 0f 10 84 85 40 ff 	movss  -0xc0(%rbp,%rax,4),%xmm0
  40085e:	ff ff 
  400860:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  400863:	01 c0                	add    %eax,%eax
  400865:	ff c0                	inc    %eax
  400867:	48 98                	cltq   
  400869:	f3 0f 10 8c 85 40 ff 	movss  -0xc0(%rbp,%rax,4),%xmm1
  400870:	ff ff 
  400872:	f3 0f 5c c1          	subss  %xmm1,%xmm0
  400876:	48 63 c2             	movslq %edx,%rax
  400879:	f3 0f 11 44 85 80    	movss  %xmm0,-0x80(%rbp,%rax,4)
  40087f:	ff 45 e4             	incl   -0x1c(%rbp)
  400882:	83 7d e4 03          	cmpl   $0x3,-0x1c(%rbp)
  400886:	7e 8b                	jle    400813 <fft+0x170>
  400888:	48 8d 4d 80          	lea    -0x80(%rbp),%rcx
  40088c:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
  400893:	ba 20 00 00 00       	mov    $0x20,%edx
  400898:	48 89 ce             	mov    %rcx,%rsi
  40089b:	48 89 c7             	mov    %rax,%rdi
  40089e:	e8 9d fc ff ff       	callq  400540 <memcpy@plt>
  4008a3:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
  4008a7:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
  4008ae:	ba 20 00 00 00       	mov    $0x20,%edx
  4008b3:	48 89 ce             	mov    %rcx,%rsi
  4008b6:	48 89 c7             	mov    %rax,%rdi
  4008b9:	e8 82 fc ff ff       	callq  400540 <memcpy@plt>
  4008be:	f3 0f 10 8d 4c ff ff 	movss  -0xb4(%rbp),%xmm1
  4008c5:	ff 
  4008c6:	f3 0f 10 05 02 06 00 	movss  0x602(%rip),%xmm0        # 400ed0 <w+0x30>
  4008cd:	00 
  4008ce:	0f 57 c1             	xorps  %xmm1,%xmm0
  4008d1:	f3 0f 11 85 6c ff ff 	movss  %xmm0,-0x94(%rbp)
  4008d8:	ff 
  4008d9:	b8 00 00 00 00       	mov    $0x0,%eax
  4008de:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
  4008e4:	f3 0f 10 8d 5c ff ff 	movss  -0xa4(%rbp),%xmm1
  4008eb:	ff 
  4008ec:	f3 0f 10 05 dc 05 00 	movss  0x5dc(%rip),%xmm0        # 400ed0 <w+0x30>
  4008f3:	00 
  4008f4:	0f 57 c1             	xorps  %xmm1,%xmm0
  4008f7:	f3 0f 11 85 7c ff ff 	movss  %xmm0,-0x84(%rbp)
  4008fe:	ff 
  4008ff:	b8 00 00 00 00       	mov    $0x0,%eax
  400904:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%rbp)
  40090a:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
  400911:	e9 6f 01 00 00       	jmpq   400a85 <fft+0x3e2>
  400916:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  400919:	8d 14 85 00 00 00 00 	lea    0x0(,%rax,4),%edx
  400920:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  400923:	c1 e0 02             	shl    $0x2,%eax
  400926:	48 98                	cltq   
  400928:	f3 0f 10 8c 85 40 ff 	movss  -0xc0(%rbp,%rax,4),%xmm1
  40092f:	ff ff 
  400931:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  400934:	01 c0                	add    %eax,%eax
  400936:	ff c0                	inc    %eax
  400938:	01 c0                	add    %eax,%eax
  40093a:	48 98                	cltq   
  40093c:	f3 0f 10 84 85 40 ff 	movss  -0xc0(%rbp,%rax,4),%xmm0
  400943:	ff ff 
  400945:	f3 0f 58 c1          	addss  %xmm1,%xmm0
  400949:	48 63 c2             	movslq %edx,%rax
  40094c:	f3 0f 11 44 85 80    	movss  %xmm0,-0x80(%rbp,%rax,4)
  400952:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  400955:	01 c0                	add    %eax,%eax
  400957:	ff c0                	inc    %eax
  400959:	8d 14 00             	lea    (%rax,%rax,1),%edx
  40095c:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40095f:	c1 e0 02             	shl    $0x2,%eax
  400962:	48 98                	cltq   
  400964:	f3 0f 10 84 85 40 ff 	movss  -0xc0(%rbp,%rax,4),%xmm0
  40096b:	ff ff 
  40096d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  400970:	01 c0                	add    %eax,%eax
  400972:	ff c0                	inc    %eax
  400974:	01 c0                	add    %eax,%eax
  400976:	48 98                	cltq   
  400978:	f3 0f 10 8c 85 40 ff 	movss  -0xc0(%rbp,%rax,4),%xmm1
  40097f:	ff ff 
  400981:	f3 0f 5c c1          	subss  %xmm1,%xmm0
  400985:	48 63 c2             	movslq %edx,%rax
  400988:	f3 0f 11 44 85 80    	movss  %xmm0,-0x80(%rbp,%rax,4)
  40098e:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  400991:	c1 e0 02             	shl    $0x2,%eax
  400994:	8d 50 01             	lea    0x1(%rax),%edx
  400997:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40099a:	c1 e0 02             	shl    $0x2,%eax
  40099d:	ff c0                	inc    %eax
  40099f:	48 98                	cltq   
  4009a1:	f3 0f 10 8c 85 40 ff 	movss  -0xc0(%rbp,%rax,4),%xmm1
  4009a8:	ff ff 
  4009aa:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  4009ad:	c1 e0 02             	shl    $0x2,%eax
  4009b0:	83 c0 03             	add    $0x3,%eax
  4009b3:	48 98                	cltq   
  4009b5:	f3 0f 10 84 85 40 ff 	movss  -0xc0(%rbp,%rax,4),%xmm0
  4009bc:	ff ff 
  4009be:	f3 0f 58 c1          	addss  %xmm1,%xmm0
  4009c2:	48 63 c2             	movslq %edx,%rax
  4009c5:	f3 0f 11 44 85 80    	movss  %xmm0,-0x80(%rbp,%rax,4)
  4009cb:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  4009ce:	c1 e0 02             	shl    $0x2,%eax
  4009d1:	8d 50 01             	lea    0x1(%rax),%edx
  4009d4:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  4009d7:	c1 e0 02             	shl    $0x2,%eax
  4009da:	ff c0                	inc    %eax
  4009dc:	48 98                	cltq   
  4009de:	f3 0f 10 8c 85 60 ff 	movss  -0xa0(%rbp,%rax,4),%xmm1
  4009e5:	ff ff 
  4009e7:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  4009ea:	c1 e0 02             	shl    $0x2,%eax
  4009ed:	83 c0 03             	add    $0x3,%eax
  4009f0:	48 98                	cltq   
  4009f2:	f3 0f 10 84 85 60 ff 	movss  -0xa0(%rbp,%rax,4),%xmm0
  4009f9:	ff ff 
  4009fb:	f3 0f 58 c1          	addss  %xmm1,%xmm0
  4009ff:	48 63 c2             	movslq %edx,%rax
  400a02:	f3 0f 11 44 85 a0    	movss  %xmm0,-0x60(%rbp,%rax,4)
  400a08:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  400a0b:	c1 e0 02             	shl    $0x2,%eax
  400a0e:	8d 50 03             	lea    0x3(%rax),%edx
  400a11:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  400a14:	c1 e0 02             	shl    $0x2,%eax
  400a17:	ff c0                	inc    %eax
  400a19:	48 98                	cltq   
  400a1b:	f3 0f 10 84 85 40 ff 	movss  -0xc0(%rbp,%rax,4),%xmm0
  400a22:	ff ff 
  400a24:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  400a27:	c1 e0 02             	shl    $0x2,%eax
  400a2a:	83 c0 03             	add    $0x3,%eax
  400a2d:	48 98                	cltq   
  400a2f:	f3 0f 10 8c 85 40 ff 	movss  -0xc0(%rbp,%rax,4),%xmm1
  400a36:	ff ff 
  400a38:	f3 0f 5c c1          	subss  %xmm1,%xmm0
  400a3c:	48 63 c2             	movslq %edx,%rax
  400a3f:	f3 0f 11 44 85 80    	movss  %xmm0,-0x80(%rbp,%rax,4)
  400a45:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  400a48:	c1 e0 02             	shl    $0x2,%eax
  400a4b:	8d 50 03             	lea    0x3(%rax),%edx
  400a4e:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  400a51:	c1 e0 02             	shl    $0x2,%eax
  400a54:	ff c0                	inc    %eax
  400a56:	48 98                	cltq   
  400a58:	f3 0f 10 84 85 60 ff 	movss  -0xa0(%rbp,%rax,4),%xmm0
  400a5f:	ff ff 
  400a61:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  400a64:	c1 e0 02             	shl    $0x2,%eax
  400a67:	83 c0 03             	add    $0x3,%eax
  400a6a:	48 98                	cltq   
  400a6c:	f3 0f 10 8c 85 60 ff 	movss  -0xa0(%rbp,%rax,4),%xmm1
  400a73:	ff ff 
  400a75:	f3 0f 5c c1          	subss  %xmm1,%xmm0
  400a79:	48 63 c2             	movslq %edx,%rax
  400a7c:	f3 0f 11 44 85 a0    	movss  %xmm0,-0x60(%rbp,%rax,4)
  400a82:	ff 45 e4             	incl   -0x1c(%rbp)
  400a85:	83 7d e4 01          	cmpl   $0x1,-0x1c(%rbp)
  400a89:	0f 8e 87 fe ff ff    	jle    400916 <fft+0x273>
  400a8f:	48 8d 4d 80          	lea    -0x80(%rbp),%rcx
  400a93:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
  400a9a:	ba 20 00 00 00       	mov    $0x20,%edx
  400a9f:	48 89 ce             	mov    %rcx,%rsi
  400aa2:	48 89 c7             	mov    %rax,%rdi
  400aa5:	e8 96 fa ff ff       	callq  400540 <memcpy@plt>
  400aaa:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
  400aae:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
  400ab5:	ba 20 00 00 00       	mov    $0x20,%edx
  400aba:	48 89 ce             	mov    %rcx,%rsi
  400abd:	48 89 c7             	mov    %rax,%rdi
  400ac0:	e8 7b fa ff ff       	callq  400540 <memcpy@plt>
  400ac5:	f3 0f 10 8d 58 ff ff 	movss  -0xa8(%rbp),%xmm1
  400acc:	ff 
  400acd:	f3 0f 10 05 fb 03 00 	movss  0x3fb(%rip),%xmm0        # 400ed0 <w+0x30>
  400ad4:	00 
  400ad5:	0f 57 c1             	xorps  %xmm1,%xmm0
  400ad8:	f3 0f 11 85 78 ff ff 	movss  %xmm0,-0x88(%rbp)
  400adf:	ff 
  400ae0:	b8 00 00 00 00       	mov    $0x0,%eax
  400ae5:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
  400aeb:	f3 0f 10 85 54 ff ff 	movss  -0xac(%rbp),%xmm0
  400af2:	ff 
  400af3:	f3 0f 10 8d 7c ff ff 	movss  -0x84(%rbp),%xmm1
  400afa:	ff 
  400afb:	f3 0f 5c c1          	subss  %xmm1,%xmm0
  400aff:	f3 0f 10 0d 99 03 00 	movss  0x399(%rip),%xmm1        # 400ea0 <w>
  400b06:	00 
  400b07:	f3 0f 59 c1          	mulss  %xmm1,%xmm0
  400b0b:	f3 0f 11 45 d4       	movss  %xmm0,-0x2c(%rbp)
  400b10:	f3 0f 10 0d 88 03 00 	movss  0x388(%rip),%xmm1        # 400ea0 <w>
  400b17:	00 
  400b18:	f3 0f 10 05 b0 03 00 	movss  0x3b0(%rip),%xmm0        # 400ed0 <w+0x30>
  400b1f:	00 
  400b20:	0f 57 c8             	xorps  %xmm0,%xmm1
  400b23:	f3 0f 10 95 54 ff ff 	movss  -0xac(%rbp),%xmm2
  400b2a:	ff 
  400b2b:	f3 0f 10 85 7c ff ff 	movss  -0x84(%rbp),%xmm0
  400b32:	ff 
  400b33:	f3 0f 58 c2          	addss  %xmm2,%xmm0
  400b37:	f3 0f 59 c1          	mulss  %xmm1,%xmm0
  400b3b:	f3 0f 11 45 d8       	movss  %xmm0,-0x28(%rbp)
  400b40:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  400b43:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
  400b49:	8b 45 d8             	mov    -0x28(%rbp),%eax
  400b4c:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
  400b52:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  400b55:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%rbp)
  400b5b:	8b 45 d8             	mov    -0x28(%rbp),%eax
  400b5e:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
  400b64:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
  400b6b:	e9 c5 00 00 00       	jmpq   400c35 <fft+0x592>
  400b70:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  400b73:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  400b76:	48 98                	cltq   
  400b78:	f3 0f 10 8c 85 40 ff 	movss  -0xc0(%rbp,%rax,4),%xmm1
  400b7f:	ff ff 
  400b81:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  400b84:	83 c0 04             	add    $0x4,%eax
  400b87:	48 98                	cltq   
  400b89:	f3 0f 10 84 85 40 ff 	movss  -0xc0(%rbp,%rax,4),%xmm0
  400b90:	ff ff 
  400b92:	f3 0f 58 c1          	addss  %xmm1,%xmm0
  400b96:	48 63 c2             	movslq %edx,%rax
  400b99:	f3 0f 11 44 85 80    	movss  %xmm0,-0x80(%rbp,%rax,4)
  400b9f:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  400ba2:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  400ba5:	48 98                	cltq   
  400ba7:	f3 0f 10 8c 85 60 ff 	movss  -0xa0(%rbp,%rax,4),%xmm1
  400bae:	ff ff 
  400bb0:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  400bb3:	83 c0 04             	add    $0x4,%eax
  400bb6:	48 98                	cltq   
  400bb8:	f3 0f 10 84 85 60 ff 	movss  -0xa0(%rbp,%rax,4),%xmm0
  400bbf:	ff ff 
  400bc1:	f3 0f 58 c1          	addss  %xmm1,%xmm0
  400bc5:	48 63 c2             	movslq %edx,%rax
  400bc8:	f3 0f 11 44 85 a0    	movss  %xmm0,-0x60(%rbp,%rax,4)
  400bce:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  400bd1:	8d 50 04             	lea    0x4(%rax),%edx
  400bd4:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  400bd7:	48 98                	cltq   
  400bd9:	f3 0f 10 84 85 40 ff 	movss  -0xc0(%rbp,%rax,4),%xmm0
  400be0:	ff ff 
  400be2:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  400be5:	83 c0 04             	add    $0x4,%eax
  400be8:	48 98                	cltq   
  400bea:	f3 0f 10 8c 85 40 ff 	movss  -0xc0(%rbp,%rax,4),%xmm1
  400bf1:	ff ff 
  400bf3:	f3 0f 5c c1          	subss  %xmm1,%xmm0
  400bf7:	48 63 c2             	movslq %edx,%rax
  400bfa:	f3 0f 11 44 85 80    	movss  %xmm0,-0x80(%rbp,%rax,4)
  400c00:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  400c03:	8d 50 04             	lea    0x4(%rax),%edx
  400c06:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  400c09:	48 98                	cltq   
  400c0b:	f3 0f 10 84 85 60 ff 	movss  -0xa0(%rbp,%rax,4),%xmm0
  400c12:	ff ff 
  400c14:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  400c17:	83 c0 04             	add    $0x4,%eax
  400c1a:	48 98                	cltq   
  400c1c:	f3 0f 10 8c 85 60 ff 	movss  -0xa0(%rbp,%rax,4),%xmm1
  400c23:	ff ff 
  400c25:	f3 0f 5c c1          	subss  %xmm1,%xmm0
  400c29:	48 63 c2             	movslq %edx,%rax
  400c2c:	f3 0f 11 44 85 a0    	movss  %xmm0,-0x60(%rbp,%rax,4)
  400c32:	ff 45 e4             	incl   -0x1c(%rbp)
  400c35:	83 7d e4 03          	cmpl   $0x3,-0x1c(%rbp)
  400c39:	0f 8e 31 ff ff ff    	jle    400b70 <fft+0x4cd>
  400c3f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
  400c43:	c9                   	leaveq 
  400c44:	c3                   	retq   

0000000000400c45 <prepare>:
  400c45:	48 83 ec 18          	sub    $0x18,%rsp
  400c49:	c7 44 24 0c 08 00 00 	movl   $0x8,0xc(%rsp)
  400c50:	00 
  400c51:	bf 04 00 00 00       	mov    $0x4,%edi
  400c56:	e8 c5 f8 ff ff       	callq  400520 <malloc@plt>
  400c5b:	48 89 05 2e 06 20 00 	mov    %rax,0x20062e(%rip)        # 601290 <my>
  400c62:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
  400c69:	00 
  400c6a:	eb 37                	jmp    400ca3 <prepare+0x5e>
  400c6c:	48 8b 05 1d 06 20 00 	mov    0x20061d(%rip),%rax        # 601290 <my>
  400c73:	8b 54 24 04          	mov    0x4(%rsp),%edx
  400c77:	48 63 d2             	movslq %edx,%rdx
  400c7a:	48 c1 e2 02          	shl    $0x2,%rdx
  400c7e:	48 01 d0             	add    %rdx,%rax
  400c81:	f2 0f 2a 44 24 04    	cvtsi2sdl 0x4(%rsp),%xmm0
  400c87:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
  400c8b:	66 0f 12 0d 4d 02 00 	movlpd 0x24d(%rip),%xmm1        # 400ee0 <w+0x40>
  400c92:	00 
  400c93:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
  400c97:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
  400c9b:	f3 0f 11 00          	movss  %xmm0,(%rax)
  400c9f:	ff 44 24 04          	incl   0x4(%rsp)
  400ca3:	8b 44 24 04          	mov    0x4(%rsp),%eax
  400ca7:	3b 44 24 0c          	cmp    0xc(%rsp),%eax
  400cab:	7c bf                	jl     400c6c <prepare+0x27>
  400cad:	48 83 c4 18          	add    $0x18,%rsp
  400cb1:	c3                   	retq   

0000000000400cb2 <compute>:
  400cb2:	48 83 ec 18          	sub    $0x18,%rsp
  400cb6:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
  400cbd:	00 
  400cbe:	eb 18                	jmp    400cd8 <compute+0x26>
  400cc0:	48 8b 05 c9 05 20 00 	mov    0x2005c9(%rip),%rax        # 601290 <my>
  400cc7:	be 08 00 00 00       	mov    $0x8,%esi
  400ccc:	48 89 c7             	mov    %rax,%rdi
  400ccf:	e8 cf f9 ff ff       	callq  4006a3 <fft>
  400cd4:	ff 44 24 0c          	incl   0xc(%rsp)
  400cd8:	f2 0f 2a 44 24 0c    	cvtsi2sdl 0xc(%rsp),%xmm0
  400cde:	66 0f 12 0d 72 05 20 	movlpd 0x200572(%rip),%xmm1        # 601258 <number_of_iteration>
  400ce5:	00 
  400ce6:	66 0f 2e c8          	ucomisd %xmm0,%xmm1
  400cea:	0f 97 c0             	seta   %al
  400ced:	84 c0                	test   %al,%al
  400cef:	75 cf                	jne    400cc0 <compute+0xe>
  400cf1:	48 83 c4 18          	add    $0x18,%rsp
  400cf5:	c3                   	retq   

0000000000400cf6 <report>:
  400cf6:	48 83 ec 08          	sub    $0x8,%rsp
  400cfa:	66 0f 12 05 ae 05 20 	movlpd 0x2005ae(%rip),%xmm0        # 6012b0 <ns>
  400d01:	00 
  400d02:	66 0f 12 0d 4e 05 20 	movlpd 0x20054e(%rip),%xmm1        # 601258 <number_of_iteration>
  400d09:	00 
  400d0a:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
  400d0e:	b8 a8 0e 40 00       	mov    $0x400ea8,%eax
  400d13:	48 89 c7             	mov    %rax,%rdi
  400d16:	b8 01 00 00 00       	mov    $0x1,%eax
  400d1b:	e8 e0 f7 ff ff       	callq  400500 <printf@plt>
  400d20:	48 83 c4 08          	add    $0x8,%rsp
  400d24:	c3                   	retq   

0000000000400d25 <main>:
  400d25:	48 83 ec 18          	sub    $0x18,%rsp
  400d29:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
  400d2d:	48 89 34 24          	mov    %rsi,(%rsp)
  400d31:	b8 00 00 00 00       	mov    $0x0,%eax
  400d36:	e8 0a ff ff ff       	callq  400c45 <prepare>
  400d3b:	be 80 12 60 00       	mov    $0x601280,%esi
  400d40:	bf 00 00 00 00       	mov    $0x0,%edi
  400d45:	e8 06 f8 ff ff       	callq  400550 <clock_gettime@plt>
  400d4a:	b8 00 00 00 00       	mov    $0x0,%eax
  400d4f:	e8 5e ff ff ff       	callq  400cb2 <compute>
  400d54:	be a0 12 60 00       	mov    $0x6012a0,%esi
  400d59:	bf 00 00 00 00       	mov    $0x0,%edi
  400d5e:	e8 ed f7 ff ff       	callq  400550 <clock_gettime@plt>
  400d63:	48 8b 15 3e 05 20 00 	mov    0x20053e(%rip),%rdx        # 6012a8 <finish+0x8>
  400d6a:	48 8b 05 17 05 20 00 	mov    0x200517(%rip),%rax        # 601288 <start+0x8>
  400d71:	48 89 d1             	mov    %rdx,%rcx
  400d74:	48 29 c1             	sub    %rax,%rcx
  400d77:	48 89 c8             	mov    %rcx,%rax
  400d7a:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  400d7f:	f2 0f 11 05 29 05 20 	movsd  %xmm0,0x200529(%rip)        # 6012b0 <ns>
  400d86:	00 
  400d87:	b8 00 00 00 00       	mov    $0x0,%eax
  400d8c:	e8 65 ff ff ff       	callq  400cf6 <report>
  400d91:	b8 00 00 00 00       	mov    $0x0,%eax
  400d96:	48 83 c4 18          	add    $0x18,%rsp
  400d9a:	c3                   	retq   
  400d9b:	90                   	nop
  400d9c:	90                   	nop
  400d9d:	90                   	nop
  400d9e:	90                   	nop
  400d9f:	90                   	nop

0000000000400da0 <__libc_csu_fini>:
  400da0:	f3 c3                	repz retq 
  400da2:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  400da9:	1f 84 00 00 00 00 00 

0000000000400db0 <__libc_csu_init>:
  400db0:	48 89 6c 24 d8       	mov    %rbp,-0x28(%rsp)
  400db5:	4c 89 64 24 e0       	mov    %r12,-0x20(%rsp)
  400dba:	48 8d 2d 73 02 20 00 	lea    0x200273(%rip),%rbp        # 601034 <__init_array_end>
  400dc1:	4c 8d 25 6c 02 20 00 	lea    0x20026c(%rip),%r12        # 601034 <__init_array_end>
  400dc8:	4c 89 6c 24 e8       	mov    %r13,-0x18(%rsp)
  400dcd:	4c 89 74 24 f0       	mov    %r14,-0x10(%rsp)
  400dd2:	4c 89 7c 24 f8       	mov    %r15,-0x8(%rsp)
  400dd7:	48 89 5c 24 d0       	mov    %rbx,-0x30(%rsp)
  400ddc:	48 83 ec 38          	sub    $0x38,%rsp
  400de0:	4c 29 e5             	sub    %r12,%rbp
  400de3:	41 89 fd             	mov    %edi,%r13d
  400de6:	49 89 f6             	mov    %rsi,%r14
  400de9:	48 c1 fd 03          	sar    $0x3,%rbp
  400ded:	49 89 d7             	mov    %rdx,%r15
  400df0:	e8 e3 f6 ff ff       	callq  4004d8 <_init>
  400df5:	48 85 ed             	test   %rbp,%rbp
  400df8:	74 1c                	je     400e16 <__libc_csu_init+0x66>
  400dfa:	31 db                	xor    %ebx,%ebx
  400dfc:	0f 1f 40 00          	nopl   0x0(%rax)
  400e00:	4c 89 fa             	mov    %r15,%rdx
  400e03:	4c 89 f6             	mov    %r14,%rsi
  400e06:	44 89 ef             	mov    %r13d,%edi
  400e09:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  400e0d:	48 83 c3 01          	add    $0x1,%rbx
  400e11:	48 39 eb             	cmp    %rbp,%rbx
  400e14:	72 ea                	jb     400e00 <__libc_csu_init+0x50>
  400e16:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
  400e1b:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
  400e20:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
  400e25:	4c 8b 6c 24 20       	mov    0x20(%rsp),%r13
  400e2a:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
  400e2f:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
  400e34:	48 83 c4 38          	add    $0x38,%rsp
  400e38:	c3                   	retq   
  400e39:	90                   	nop
  400e3a:	90                   	nop
  400e3b:	90                   	nop
  400e3c:	90                   	nop
  400e3d:	90                   	nop
  400e3e:	90                   	nop
  400e3f:	90                   	nop

0000000000400e40 <__do_global_ctors_aux>:
  400e40:	55                   	push   %rbp
  400e41:	48 89 e5             	mov    %rsp,%rbp
  400e44:	53                   	push   %rbx
  400e45:	48 83 ec 08          	sub    $0x8,%rsp
  400e49:	48 8b 05 e8 01 20 00 	mov    0x2001e8(%rip),%rax        # 601038 <__CTOR_LIST__>
  400e50:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  400e54:	74 19                	je     400e6f <__do_global_ctors_aux+0x2f>
  400e56:	bb 38 10 60 00       	mov    $0x601038,%ebx
  400e5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400e60:	48 83 eb 08          	sub    $0x8,%rbx
  400e64:	ff d0                	callq  *%rax
  400e66:	48 8b 03             	mov    (%rbx),%rax
  400e69:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  400e6d:	75 f1                	jne    400e60 <__do_global_ctors_aux+0x20>
  400e6f:	48 83 c4 08          	add    $0x8,%rsp
  400e73:	5b                   	pop    %rbx
  400e74:	c9                   	leaveq 
  400e75:	c3                   	retq   
  400e76:	90                   	nop
  400e77:	90                   	nop

Disassembly of section .fini:

0000000000400e78 <_fini>:
  400e78:	48 83 ec 08          	sub    $0x8,%rsp
  400e7c:	e8 2f f7 ff ff       	callq  4005b0 <__do_global_dtors_aux>
  400e81:	48 83 c4 08          	add    $0x8,%rsp
  400e85:	c3                   	retq   

Disassembly of section .rodata:

0000000000400e90 <_IO_stdin_used>:
  400e90:	01 00                	add    %eax,(%rax)
  400e92:	02 00                	add    (%rax),%al
  400e94:	00 00                	add    %al,(%rax)
	...

0000000000400e98 <__dso_handle>:
	...

0000000000400ea0 <w>:
  400ea0:	81 04 35 3f 00 00 00 	addl   $0x6d695400,0x3f(,%rsi,1)
  400ea7:	00 54 69 6d 
  400eab:	65 20 65 6c          	and    %ah,%gs:0x6c(%rbp)
  400eaf:	61                   	(bad)  
  400eb0:	70 73                	jo     400f25 <w+0x85>
  400eb2:	65 64 20 62 79       	gs and %ah,%fs:%gs:0x79(%rdx)
  400eb7:	20 6e 61             	and    %ch,0x61(%rsi)
  400eba:	6e                   	outsb  %ds:(%rsi),(%dx)
  400ebb:	6f                   	outsl  %ds:(%rsi),(%dx)
  400ebc:	73 65                	jae    400f23 <w+0x83>
  400ebe:	63 6f 6e             	movslq 0x6e(%rdi),%ebp
  400ec1:	64                   	fs
  400ec2:	73 3a                	jae    400efe <w+0x5e>
  400ec4:	20 25 35 2e 35 66    	and    %ah,0x66352e35(%rip)        # 66753cff <_end+0x66152a3f>
  400eca:	0a 00                	or     (%rax),%al
  400ecc:	00 00                	add    %al,(%rax)
  400ece:	00 00                	add    %al,(%rax)
  400ed0:	00 00                	add    %al,(%rax)
  400ed2:	00 80 00 00 00 00    	add    %al,0x0(%rax)
	...
  400ee4:	00 00                	add    %al,(%rax)
  400ee6:	f0 3f                	lock (bad) 

Disassembly of section .eh_frame_hdr:

0000000000400ee8 <.eh_frame_hdr>:
  400ee8:	01 1b                	add    %ebx,(%rbx)
  400eea:	03 3b                	add    (%rbx),%edi
  400eec:	4c 00 00             	rex.WR add %r8b,(%rax)
  400eef:	00 08                	add    %cl,(%rax)
  400ef1:	00 00                	add    %al,(%rax)
  400ef3:	00 5c f7 ff          	add    %bl,-0x1(%rdi,%rsi,8)
  400ef7:	ff 68 00             	ljmpq  *0x0(%rax)
  400efa:	00 00                	add    %al,(%rax)
  400efc:	bb f7 ff ff 80       	mov    $0x80fffff7,%ebx
  400f01:	00 00                	add    %al,(%rax)
  400f03:	00 5d fd             	add    %bl,-0x3(%rbp)
  400f06:	ff                   	(bad)  
  400f07:	ff a8 00 00 00 ca    	ljmpq  *-0x36000000(%rax)
  400f0d:	fd                   	std    
  400f0e:	ff                   	(bad)  
  400f0f:	ff c0                	inc    %eax
  400f11:	00 00                	add    %al,(%rax)
  400f13:	00 0e                	add    %cl,(%rsi)
  400f15:	fe                   	(bad)  
  400f16:	ff                   	(bad)  
  400f17:	ff d8                	lcallq *<internal disassembler error>
  400f19:	00 00                	add    %al,(%rax)
  400f1b:	00 3d fe ff ff f0    	add    %bh,-0xf000002(%rip)        # fffffffff1400f1f <_end+0xfffffffff0dffc5f>
  400f21:	00 00                	add    %al,(%rax)
  400f23:	00 b8 fe ff ff 08    	add    %bh,0x8fffffe(%rax)
  400f29:	01 00                	add    %eax,(%rax)
  400f2b:	00 c8                	add    %cl,%al
  400f2d:	fe                   	(bad)  
  400f2e:	ff                   	(bad)  
  400f2f:	ff 20                	jmpq   *(%rax)
  400f31:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .eh_frame:

0000000000400f38 <__FRAME_END__-0xf8>:
  400f38:	14 00                	adc    $0x0,%al
  400f3a:	00 00                	add    %al,(%rax)
  400f3c:	00 00                	add    %al,(%rax)
  400f3e:	00 00                	add    %al,(%rax)
  400f40:	01 7a 52             	add    %edi,0x52(%rdx)
  400f43:	00 01                	add    %al,(%rcx)
  400f45:	78 10                	js     400f57 <w+0xb7>
  400f47:	01 1b                	add    %ebx,(%rbx)
  400f49:	0c 07                	or     $0x7,%al
  400f4b:	08 90 01 00 00 14    	or     %dl,0x14000001(%rax)
  400f51:	00 00                	add    %al,(%rax)
  400f53:	00 1c 00             	add    %bl,(%rax,%rax,1)
  400f56:	00 00                	add    %al,(%rax)
  400f58:	ec                   	in     (%dx),%al
  400f59:	f6 ff                	idiv   %bh
  400f5b:	ff 5f 00             	lcallq *0x0(%rdi)
	...
  400f66:	00 00                	add    %al,(%rax)
  400f68:	24 00                	and    $0x0,%al
  400f6a:	00 00                	add    %al,(%rax)
  400f6c:	34 00                	xor    $0x0,%al
  400f6e:	00 00                	add    %al,(%rax)
  400f70:	33 f7                	xor    %edi,%esi
  400f72:	ff                   	(bad)  
  400f73:	ff a2 05 00 00 00    	jmpq   *0x5(%rdx)
  400f79:	41 0e                	rex.B (bad) 
  400f7b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  400f81:	6d                   	insl   (%dx),%es:(%rdi)
  400f82:	83 03 03             	addl   $0x3,(%rbx)
  400f85:	70 05                	jo     400f8c <w+0xec>
  400f87:	0c 07                	or     $0x7,%al
  400f89:	08 00                	or     %al,(%rax)
  400f8b:	00 00                	add    %al,(%rax)
  400f8d:	00 00                	add    %al,(%rax)
  400f8f:	00 14 00             	add    %dl,(%rax,%rax,1)
  400f92:	00 00                	add    %al,(%rax)
  400f94:	5c                   	pop    %rsp
  400f95:	00 00                	add    %al,(%rax)
  400f97:	00 ad fc ff ff 6d    	add    %ch,0x6dfffffc(%rbp)
  400f9d:	00 00                	add    %al,(%rax)
  400f9f:	00 00                	add    %al,(%rax)
  400fa1:	44 0e                	rex.R (bad) 
  400fa3:	20 02                	and    %al,(%rdx)
  400fa5:	68 0e 08 14 00       	pushq  $0x14080e
  400faa:	00 00                	add    %al,(%rax)
  400fac:	74 00                	je     400fae <w+0x10e>
  400fae:	00 00                	add    %al,(%rax)
  400fb0:	02 fd                	add    %ch,%bh
  400fb2:	ff                   	(bad)  
  400fb3:	ff 44 00 00          	incl   0x0(%rax,%rax,1)
  400fb7:	00 00                	add    %al,(%rax)
  400fb9:	44 0e                	rex.R (bad) 
  400fbb:	20 7f 0e             	and    %bh,0xe(%rdi)
  400fbe:	08 00                	or     %al,(%rax)
  400fc0:	14 00                	adc    $0x0,%al
  400fc2:	00 00                	add    %al,(%rax)
  400fc4:	8c 00                	mov    %es,(%rax)
  400fc6:	00 00                	add    %al,(%rax)
  400fc8:	2e                   	cs
  400fc9:	fd                   	std    
  400fca:	ff                   	(bad)  
  400fcb:	ff 2f                	ljmpq  *(%rdi)
  400fcd:	00 00                	add    %al,(%rax)
  400fcf:	00 00                	add    %al,(%rax)
  400fd1:	44 0e                	rex.R (bad) 
  400fd3:	10 6a 0e             	adc    %ch,0xe(%rdx)
  400fd6:	08 00                	or     %al,(%rax)
  400fd8:	14 00                	adc    $0x0,%al
  400fda:	00 00                	add    %al,(%rax)
  400fdc:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
  400fdd:	00 00                	add    %al,(%rax)
  400fdf:	00 45 fd             	add    %al,-0x3(%rbp)
  400fe2:	ff                   	(bad)  
  400fe3:	ff 76 00             	pushq  0x0(%rsi)
  400fe6:	00 00                	add    %al,(%rax)
  400fe8:	00 44 0e 20          	add    %al,0x20(%rsi,%rcx,1)
  400fec:	02 71 0e             	add    0xe(%rcx),%dh
  400fef:	08 14 00             	or     %dl,(%rax,%rax,1)
  400ff2:	00 00                	add    %al,(%rax)
  400ff4:	bc 00 00 00 a8       	mov    $0xa8000000,%esp
  400ff9:	fd                   	std    
  400ffa:	ff                   	(bad)  
  400ffb:	ff 02                	incl   (%rdx)
	...
  401005:	00 00                	add    %al,(%rax)
  401007:	00 24 00             	add    %ah,(%rax,%rax,1)
  40100a:	00 00                	add    %al,(%rax)
  40100c:	d4                   	(bad)  
  40100d:	00 00                	add    %al,(%rax)
  40100f:	00 a0 fd ff ff 89    	add    %ah,-0x76000003(%rax)
  401015:	00 00                	add    %al,(%rax)
  401017:	00 00                	add    %al,(%rax)
  401019:	51                   	push   %rcx
  40101a:	8c 05 86 06 5f 0e    	mov    %es,0xe5f0686(%rip)        # e9f16a6 <_end+0xe3f03e6>
  401020:	40 83 07 8f          	rex addl $0xffffffffffffff8f,(%rdi)
  401024:	02 8e 03 8d 04 02    	add    0x2048d03(%rsi),%cl
  40102a:	58                   	pop    %rax
  40102b:	0e                   	(bad)  
  40102c:	08 00                	or     %al,(%rax)
	...

0000000000401030 <__FRAME_END__>:
  401030:	00 00                	add    %al,(%rax)
	...

Disassembly of section .ctors:

0000000000601038 <__CTOR_LIST__>:
  601038:	ff                   	(bad)  
  601039:	ff                   	(bad)  
  60103a:	ff                   	(bad)  
  60103b:	ff                   	(bad)  
  60103c:	ff                   	(bad)  
  60103d:	ff                   	(bad)  
  60103e:	ff                   	(bad)  
  60103f:	ff 00                	incl   (%rax)

0000000000601040 <__CTOR_END__>:
	...

Disassembly of section .dtors:

0000000000601048 <__DTOR_LIST__>:
  601048:	ff                   	(bad)  
  601049:	ff                   	(bad)  
  60104a:	ff                   	(bad)  
  60104b:	ff                   	(bad)  
  60104c:	ff                   	(bad)  
  60104d:	ff                   	(bad)  
  60104e:	ff                   	(bad)  
  60104f:	ff 00                	incl   (%rax)

0000000000601050 <__DTOR_END__>:
	...

Disassembly of section .jcr:

0000000000601058 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000601060 <_DYNAMIC>:
  601060:	01 00                	add    %eax,(%rax)
  601062:	00 00                	add    %al,(%rax)
  601064:	00 00                	add    %al,(%rax)
  601066:	00 00                	add    %al,(%rax)
  601068:	01 00                	add    %eax,(%rax)
  60106a:	00 00                	add    %al,(%rax)
  60106c:	00 00                	add    %al,(%rax)
  60106e:	00 00                	add    %al,(%rax)
  601070:	01 00                	add    %eax,(%rax)
  601072:	00 00                	add    %al,(%rax)
  601074:	00 00                	add    %al,(%rax)
  601076:	00 00                	add    %al,(%rax)
  601078:	3d 00 00 00 00       	cmp    $0x0,%eax
  60107d:	00 00                	add    %al,(%rax)
  60107f:	00 0c 00             	add    %cl,(%rax,%rax,1)
  601082:	00 00                	add    %al,(%rax)
  601084:	00 00                	add    %al,(%rax)
  601086:	00 00                	add    %al,(%rax)
  601088:	d8 04 40             	fadds  (%rax,%rax,2)
  60108b:	00 00                	add    %al,(%rax)
  60108d:	00 00                	add    %al,(%rax)
  60108f:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 601095 <_DYNAMIC+0x35>
  601095:	00 00                	add    %al,(%rax)
  601097:	00 78 0e             	add    %bh,0xe(%rax)
  60109a:	40 00 00             	add    %al,(%rax)
  60109d:	00 00                	add    %al,(%rax)
  60109f:	00 f5                	add    %dh,%ch
  6010a1:	fe                   	(bad)  
  6010a2:	ff 6f 00             	ljmpq  *0x0(%rdi)
  6010a5:	00 00                	add    %al,(%rax)
  6010a7:	00 60 02             	add    %ah,0x2(%rax)
  6010aa:	40 00 00             	add    %al,(%rax)
  6010ad:	00 00                	add    %al,(%rax)
  6010af:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 6010b5 <_DYNAMIC+0x55>
  6010b5:	00 00                	add    %al,(%rax)
  6010b7:	00 58 03             	add    %bl,0x3(%rax)
  6010ba:	40 00 00             	add    %al,(%rax)
  6010bd:	00 00                	add    %al,(%rax)
  6010bf:	00 06                	add    %al,(%rsi)
  6010c1:	00 00                	add    %al,(%rax)
  6010c3:	00 00                	add    %al,(%rax)
  6010c5:	00 00                	add    %al,(%rax)
  6010c7:	00 80 02 40 00 00    	add    %al,0x4002(%rax)
  6010cd:	00 00                	add    %al,(%rax)
  6010cf:	00 0a                	add    %cl,(%rdx)
  6010d1:	00 00                	add    %al,(%rax)
  6010d3:	00 00                	add    %al,(%rax)
  6010d5:	00 00                	add    %al,(%rax)
  6010d7:	00 81 00 00 00 00    	add    %al,0x0(%rcx)
  6010dd:	00 00                	add    %al,(%rax)
  6010df:	00 0b                	add    %cl,(%rbx)
  6010e1:	00 00                	add    %al,(%rax)
  6010e3:	00 00                	add    %al,(%rax)
  6010e5:	00 00                	add    %al,(%rax)
  6010e7:	00 18                	add    %bl,(%rax)
  6010e9:	00 00                	add    %al,(%rax)
  6010eb:	00 00                	add    %al,(%rax)
  6010ed:	00 00                	add    %al,(%rax)
  6010ef:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 6010f5 <_DYNAMIC+0x95>
	...
  6010fd:	00 00                	add    %al,(%rax)
  6010ff:	00 03                	add    %al,(%rbx)
  601101:	00 00                	add    %al,(%rax)
  601103:	00 00                	add    %al,(%rax)
  601105:	00 00                	add    %al,(%rax)
  601107:	00 08                	add    %cl,(%rax)
  601109:	12 60 00             	adc    0x0(%rax),%ah
  60110c:	00 00                	add    %al,(%rax)
  60110e:	00 00                	add    %al,(%rax)
  601110:	02 00                	add    (%rax),%al
  601112:	00 00                	add    %al,(%rax)
  601114:	00 00                	add    %al,(%rax)
  601116:	00 00                	add    %al,(%rax)
  601118:	90                   	nop
  601119:	00 00                	add    %al,(%rax)
  60111b:	00 00                	add    %al,(%rax)
  60111d:	00 00                	add    %al,(%rax)
  60111f:	00 14 00             	add    %dl,(%rax,%rax,1)
  601122:	00 00                	add    %al,(%rax)
  601124:	00 00                	add    %al,(%rax)
  601126:	00 00                	add    %al,(%rax)
  601128:	07                   	(bad)  
  601129:	00 00                	add    %al,(%rax)
  60112b:	00 00                	add    %al,(%rax)
  60112d:	00 00                	add    %al,(%rax)
  60112f:	00 17                	add    %dl,(%rdi)
  601131:	00 00                	add    %al,(%rax)
  601133:	00 00                	add    %al,(%rax)
  601135:	00 00                	add    %al,(%rax)
  601137:	00 48 04             	add    %cl,0x4(%rax)
  60113a:	40 00 00             	add    %al,(%rax)
  60113d:	00 00                	add    %al,(%rax)
  60113f:	00 07                	add    %al,(%rdi)
  601141:	00 00                	add    %al,(%rax)
  601143:	00 00                	add    %al,(%rax)
  601145:	00 00                	add    %al,(%rax)
  601147:	00 30                	add    %dh,(%rax)
  601149:	04 40                	add    $0x40,%al
  60114b:	00 00                	add    %al,(%rax)
  60114d:	00 00                	add    %al,(%rax)
  60114f:	00 08                	add    %cl,(%rax)
  601151:	00 00                	add    %al,(%rax)
  601153:	00 00                	add    %al,(%rax)
  601155:	00 00                	add    %al,(%rax)
  601157:	00 18                	add    %bl,(%rax)
  601159:	00 00                	add    %al,(%rax)
  60115b:	00 00                	add    %al,(%rax)
  60115d:	00 00                	add    %al,(%rax)
  60115f:	00 09                	add    %cl,(%rcx)
  601161:	00 00                	add    %al,(%rax)
  601163:	00 00                	add    %al,(%rax)
  601165:	00 00                	add    %al,(%rax)
  601167:	00 18                	add    %bl,(%rax)
  601169:	00 00                	add    %al,(%rax)
  60116b:	00 00                	add    %al,(%rax)
  60116d:	00 00                	add    %al,(%rax)
  60116f:	00 fe                	add    %bh,%dh
  601171:	ff                   	(bad)  
  601172:	ff 6f 00             	ljmpq  *0x0(%rdi)
  601175:	00 00                	add    %al,(%rax)
  601177:	00 f0                	add    %dh,%al
  601179:	03 40 00             	add    0x0(%rax),%eax
  60117c:	00 00                	add    %al,(%rax)
  60117e:	00 00                	add    %al,(%rax)
  601180:	ff                   	(bad)  
  601181:	ff                   	(bad)  
  601182:	ff 6f 00             	ljmpq  *0x0(%rdi)
  601185:	00 00                	add    %al,(%rax)
  601187:	00 02                	add    %al,(%rdx)
  601189:	00 00                	add    %al,(%rax)
  60118b:	00 00                	add    %al,(%rax)
  60118d:	00 00                	add    %al,(%rax)
  60118f:	00 f0                	add    %dh,%al
  601191:	ff                   	(bad)  
  601192:	ff 6f 00             	ljmpq  *0x0(%rdi)
  601195:	00 00                	add    %al,(%rax)
  601197:	00 da                	add    %bl,%dl
  601199:	03 40 00             	add    0x0(%rax),%eax
	...

Disassembly of section .got:

0000000000601200 <.got>:
	...

Disassembly of section .got.plt:

0000000000601208 <_GLOBAL_OFFSET_TABLE_>:
  601208:	60                   	(bad)  
  601209:	10 60 00             	adc    %ah,0x0(%rax)
	...
  601220:	06                   	(bad)  
  601221:	05 40 00 00 00       	add    $0x40,%eax
  601226:	00 00                	add    %al,(%rax)
  601228:	16                   	(bad)  
  601229:	05 40 00 00 00       	add    $0x40,%eax
  60122e:	00 00                	add    %al,(%rax)
  601230:	26                   	es
  601231:	05 40 00 00 00       	add    $0x40,%eax
  601236:	00 00                	add    %al,(%rax)
  601238:	36                   	ss
  601239:	05 40 00 00 00       	add    $0x40,%eax
  60123e:	00 00                	add    %al,(%rax)
  601240:	46 05 40 00 00 00    	rex.RX add $0x40,%eax
  601246:	00 00                	add    %al,(%rax)
  601248:	56                   	push   %rsi
  601249:	05 40 00 00 00       	add    $0x40,%eax
	...

Disassembly of section .data:

0000000000601250 <__data_start>:
	...

0000000000601258 <number_of_iteration>:
  601258:	00 00                	add    %al,(%rax)
  60125a:	00 00                	add    %al,(%rax)
  60125c:	00                   	.byte 0x0
  60125d:	88 c3                	mov    %al,%bl
  60125f:	40                   	rex

Disassembly of section .bss:

0000000000601260 <completed.6364>:
	...

0000000000601268 <dtor_idx.6366>:
	...

0000000000601270 <t2>:
	...

0000000000601280 <start>:
	...

0000000000601290 <my>:
	...

00000000006012a0 <finish>:
	...

00000000006012b0 <ns>:
	...

00000000006012b8 <t1>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 47 4e             	sub    %al,0x4e(%rdi)
   8:	55                   	push   %rbp
   9:	29 20                	sub    %esp,(%rax)
   b:	34 2e                	xor    $0x2e,%al
   d:	34 2e                	xor    $0x2e,%al
   f:	37                   	(bad)  
  10:	20 32                	and    %dh,(%rdx)
  12:	30 31                	xor    %dh,(%rcx)
  14:	32 30                	xor    (%rax),%dh
  16:	33 31                	xor    (%rcx),%esi
  18:	33 20                	xor    (%rax),%esp
  1a:	28 52 65             	sub    %dl,0x65(%rdx)
  1d:	64 20 48 61          	and    %cl,%fs:0x61(%rax)
  21:	74 20                	je     43 <_init-0x400495>
  23:	34 2e                	xor    $0x2e,%al
  25:	34 2e                	xor    $0x2e,%al
  27:	37                   	(bad)  
  28:	2d 32 33 29 00       	sub    $0x293332,%eax
